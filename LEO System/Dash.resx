<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>